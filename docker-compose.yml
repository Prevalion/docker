services:
  backend:
    build: ./back
    ports:
      - "5000:5000"
    networks:
      - fullstack-network
    develop:
      watch:
        - action: rebuild
          path: ./back
    # Add logging configuration for backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_SERVICE_NAME=weather-backend

  frontend:
    build:
      context: ./front
      args:
        - REACT_APP_BACKEND_URL=http://backend:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - fullstack-network
    develop:
      watch:
        - action: rebuild
          path: ./front
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - fullstack-network

  # Loki for logs
  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3101:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - fullstack-network
    volumes:
      - loki-data:/loki
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Tempo for traces
  tempo:
    image: grafana/tempo:2.3.0
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
      - tempo-data:/tmp/tempo
    ports:
      - "3201:3200"   # tempo
      - "4317:4317"   # otlp grpc
    networks:
      - fullstack-network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3200/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:v2.48.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - fullstack-network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Mimir for metrics
  mimir:
    image: grafana/mimir:2.10.3
    command: [ "-config.file=/etc/mimir.yaml" ]
    volumes:
      - ./mimir/mimir.yaml:/etc/mimir.yaml
      - mimir-data:/tmp/mimir
    ports:
      - "9010:9009"
    networks:
      - fullstack-network
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:9009/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.2.3
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
    - GF_AUTH_ANONYMOUS_ENABLED=true
    - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    - GF_AUTH_DISABLE_LOGIN_FORM=false  # Changed to false to show login form
    - GF_AUTH_DISABLE_SIGNOUT_MENU=false
    - GF_SERVER_HTTP_PORT=3001
    - GF_SECURITY_ADMIN_USER=admin
    - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3001:3001"
    networks:
      - fullstack-network
    depends_on:
      loki:
        condition: service_healthy
      tempo:
        condition: service_healthy
      mimir:
        condition: service_healthy
      prometheus:
        condition: service_healthy

networks:
  fullstack-network:
    driver: bridge

volumes:
  loki-data:
  tempo-data:
  mimir-data:
  grafana-data: